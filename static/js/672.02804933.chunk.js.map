{"version":3,"file":"static/js/672.02804933.chunk.js","mappings":"0LACA,GAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,0B,SCYhL,EAVmB,SAACA,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACE,gBAAKC,UAAWC,EAAAA,OAAW,IAAMA,EAAAA,OAAjC,UACE,SAAC,KAAD,CAAMC,GAAIJ,EAAV,SAAiBD,EAAMM,QAG5B,ECAD,EARgB,SAACN,GACf,OACE,gBAAKG,UAAWC,EAAAA,QAAhB,SACGJ,EAAMO,aAGZ,E,iDC6CKC,GAAsBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,wBAAlBD,EAVL,SAACT,GACtB,OACE,kBAAMW,SAAUX,EAAMY,aAAtB,WACE,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GAAUC,SAAU,CAACC,EAAAA,GAAWX,KAAM,iBAAkBY,YAAY,2BACtF,gBAAKf,UAAU,GAAf,UACE,yCAIP,IAGD,EA/CgB,SAACH,GAEf,IAAImB,EAAQnB,EAAMoB,YAEGD,EAAME,eAO3B,OAAKrB,EAAMsB,QAKT,iBAAKnB,UAAWC,EAAAA,QAAhB,WACE,gBAAKD,UAAWC,EAAAA,aAAhB,SACGe,EAAMI,QAAQC,KAAI,SAACC,GAAD,OACjB,0BACE,SAAC,EAAD,CAAYnB,KAAMmB,EAAEnB,KAAMJ,GAAIuB,EAAEvB,MADxBuB,EAAEvB,GADK,OAOrB,iBAAKC,UAAWC,EAAAA,SAAhB,UACGe,EAAMO,SAASF,KAAI,SAACG,EAAGC,GAAJ,OAClB,SAAC,EAAD,CAAiBrB,YAAaoB,EAAEE,SAAlBD,EADI,KAGpB,SAACpB,EAAD,CAAqBG,SAvBP,SAACmB,GACnB9B,EAAM+B,YAAYD,EAAOT,eAE1B,WAGQ,SAAC,KAAD,CAAUhB,GAAG,UAqBvB,E,oBCvBD,GAAe2B,E,QAAAA,KACbC,EAAAA,EAAAA,KAdsB,SAACd,GACvB,MAAO,CACLC,YAAaD,EAAMC,YAEtB,IAC0B,SAACc,GAC1B,MAAO,CACLH,YAAa,SAACV,GACZa,GAASC,EAAAA,EAAAA,GAAyBd,GACnC,EAEJ,IAICe,EAAAA,EAFF,CAGEC,E,mJClBEC,EAA6B,SAACnB,GAAD,MAAY,CACzCG,OAAQH,EAAMoB,KAAKjB,OADU,EAIpBc,EAAmB,SAACI,GAAe,IACtCC,EADqC,0IAEvC,WACI,OAAKC,KAAK1C,MAAMsB,QAET,SAACkB,GAAD,UAAeE,KAAK1C,SAFI,SAAC,KAAD,CAAUK,GAAG,UAG/C,KANsC,GACXsC,EAAAA,WAQhC,OADqCV,EAAAA,EAAAA,IAAQK,EAARL,CAAoCQ,EAE5E,C","sources":["webpack://kamasutra/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthNavigate.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oe96H\",\"dialogsItems\":\"Dialogs_dialogsItems__zeEWD\",\"active\":\"Dialogs_active__t8cjl\",\"messages\":\"Dialogs_messages__Cg2l+\",\"message\":\"Dialogs_message__ZEWo0\"};","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport s from \"./../Dialogs.module.css\";\nconst DialogItem = (props) => {\n  let path = \"/dialogs/\" + props.id;\n\n  return (\n    <div className={s.dialog + \" \" + s.active}>\n      <Link to={path}>{props.name}</Link>\n    </div>\n  );\n};\n\nexport default DialogItem;","import React from \"react\";\nimport s from \"./../Dialogs.module.css\";\n\nconst Message = (props) => {\n  return (\n    <div className={s.message}>\n      {props.messageText}\n    </div>\n  )\n};\n\nexport default Message;","import React from \"react\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport s from \"./Dialogs.module.css\";\nimport { Navigate } from \"react-router-dom\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Textarea } from \"../common/Preloader/FormsControls/FormsControls\";\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\n\nconst Dialogs = (props) => {\n\n  let state = props.dialogsPage;\n\n  let newMessageBody = state.newMessageBody;\n\n  let addNewMessage = (values) => {\n    props.sendMessage(values.newMessageBody);\n\n  };\n\n  if (!props.isAuth) {\n    return <Navigate to='/login' />\n  };\n\n  return (\n    <div className={s.dialogs}>\n      <div className={s.dialogsItems}>\n        {state.dialogs.map((d) =>\n          <div key={d.id}>\n            <DialogItem name={d.name} id={d.id} />\n          </div>\n        )}\n\n      </div>\n      <div className={s.messages}>\n        {state.messages.map((m, i) =>\n          <Message key={i} messageText={m.message} />\n        )}\n        <AddMessageFormRedux onSubmit={addNewMessage}/>\n      </div>\n    </div>\n  );\n};\n\nconst addMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <Field component={Textarea} validate={[required]} name={\"newMessageBody\"} placeholder='Enter your message...' />\n      <div className=\"\">\n        <button>Send</button>\n      </div>\n    </form>\n  )\n}\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(addMessageForm)\n\nexport default Dialogs;","import { sendMessageActionCreator } from \"../../redux/dialogReducer\";\nimport Dialogs from \"./Dialogs\";\nimport { connect } from \"react-redux\";\nimport { withAuthNavigate } from \"../../hoc/withAuthNavigate\";\nimport { compose } from \"redux\";\n\nconst mapStateToProps = (state) => {\n  return {\n    dialogsPage: state.dialogsPage\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sendMessage: (newMessageBody) => {\n      dispatch(sendMessageActionCreator(newMessageBody));\n    }\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthNavigate\n)(Dialogs);\n","import React from 'react'\nimport { connect } from 'react-redux';\nimport { Navigate } from \"react-router-dom\"\n\nlet mapStateToPropsForNavigate = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport const withAuthNavigate = (Component) => {\n    class NavigateComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Navigate to='/login' />\n\n            return <Component {...this.props} />\n        }\n    }\n    let ConnectedAuthNavigateComponent = connect(mapStateToPropsForNavigate)(NavigateComponent);\n    return ConnectedAuthNavigateComponent;\n};"],"names":["props","path","id","className","s","to","name","messageText","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","state","dialogsPage","newMessageBody","isAuth","dialogs","map","d","messages","m","i","message","values","sendMessage","compose","connect","dispatch","sendMessageActionCreator","withAuthNavigate","Dialogs","mapStateToPropsForNavigate","auth","Component","NavigateComponent","this","React"],"sourceRoot":""}